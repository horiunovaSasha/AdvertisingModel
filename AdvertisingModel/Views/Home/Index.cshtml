@{
    ViewData["Title"] = "Home Page";
    bool isNotAdmin = !this.User.IsInRole("admin");
}

<!-- Animated -->
<div class="animated fadeIn">
    @if (!isNotAdmin)
    {
        <span><b>Функція q(t): </b><input type="text" id="func_text" value="@ViewBag.User.Func" /></span>
        <br />
    }
    else
    {
        <span>Функція q(t) <b>@ViewBag.User.Func</b></span>
    }
    <br />
    <div class="row">
        <span class="col-2">
            <b>r</b>
            <input disabled="@isNotAdmin" type="text" value="@ViewBag.User.R" id="r_input">
        </span>
        <span class="col-2">
            <b>p</b>
            <input type="text" disabled="@isNotAdmin" value="@ViewBag.User.P" id="p_input">
        </span>
        <span class="col-2">
            <b>c</b>
            <input type="text" disabled="@isNotAdmin" value="@ViewBag.User.C" id="c_input">
        </span>
        <span class="col-2">
            <b>a</b>
            <input type="text" disabled="@isNotAdmin" value="@ViewBag.User.C" id="a_input">
        </span>
        <span class="col-2">
            <b>k0</b>
            <input type="text" value="@ViewBag.User.K0" disabled="@isNotAdmin" id="k0_input">
        </span>
        <span class="col-2">
            <b>k1</b>
            <input type="text" value="@ViewBag.User.K1" disabled="@isNotAdmin" id="k1_input">
        </span>
    </div>
    @if (!isNotAdmin)
    {
        <div class="row">
            <div class="col-12" style="margin-top: 20px; padding-right: 87px;">
                <button type="button" class="btn btn-info mb-1 float-right" id="changeParams">
                    Застосувати
                </button>
            </div>
        </div>
    }
    <br />
    <div class="row">
        <div class="col-12 widget">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Advertising Model</h4>
                    <div id="chartdiv" style="height: 600px"></div>
                </div>
            </div>
        </div>
    </div>

</div>
<!-- .animated -->
@section Scripts {
    <!--Local Stuff-->
    <script>
        $ = jQuery;
        jQuery(document).ready(function ($) {
            "use strict";

        });

        function buildGraph() {
            am4core.ready(function () {
                // Themes begin
                am4core.useTheme(am4themes_animated);
                // Themes end

                var chart = am4core.create("chartdiv", am4charts.XYChart);

                $.ajax({
                    @if (isNotAdmin) {
                        <text>
                    url: "/api/Calculations/GetCalculate",
                        </text>
                    } else
                    {
                        <text>
                    url: "/api/Calculations/Calculate",
                    data:
                    {
                        userId: "@ViewBag.UserId",
                        r: $("#r_input").val(),
                        p: $("#p_input").val(),
                        c: $("#c_input").val(),
                        a: $("#a_input").val(),
                        k0: $("#k0_input").val(),
                        k1: $("#k1_input").val(),
                        func: $("#func_text").val()
                    }
                    </text>
                    }
                })
                .done(function (response) {
                    var data = [];
                    var scale = 1;
                    var max1 = 0;
                    var max2 = 0;

                    $(response).each(function (index, elem) {
                        if (max1 < elem[0])
                            max1 = elem[0];

                        if (max2 < elem[1])
                            max2 = elem[1];
                    });

                    if (max1 > max2)
                        scale = (1 / (max1 / max2));

                    $(response).each(function (index, elem) {
                        var item = {
                            "t": index * 0.01,
                            "y1": elem[0] * scale,
                            "y2": elem[1],
                        };

                        if (index % 5 == 0)
                            item.lineColor = chart.colors.next();

                        data.push(item);
                    });

                    chart.data = data;
                })
                .fail(function response() {
                    console.log(response);
                });

                var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
                categoryAxis.renderer.grid.template.location = 0;
                categoryAxis.renderer.ticks.template.disabled = true;
                categoryAxis.renderer.line.opacity = 0;
                categoryAxis.renderer.grid.template.disabled = true;
                categoryAxis.renderer.minGridDistance = 40;
                categoryAxis.dataFields.category = "t";
                categoryAxis.startLocation = 0.4;
                categoryAxis.endLocation = 0.6;


                var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
                valueAxis.tooltip.disabled = true;
                valueAxis.renderer.line.opacity = 0;
                valueAxis.renderer.ticks.template.disabled = true;
                valueAxis.min = 0;

                var lineSeries = chart.series.push(new am4charts.LineSeries());
                lineSeries.dataFields.categoryX = "t";
                lineSeries.dataFields.valueY = "y1";
                lineSeries.tooltipText = "y1: {valueY.value}";
                lineSeries.fillOpacity = 0.5;
                lineSeries.strokeWidth = 3;
                lineSeries.propertyFields.stroke = "lineColor";
                lineSeries.propertyFields.fill = "lineColor";

                var lineSeries1 = chart.series.push(new am4charts.LineSeries());
                lineSeries1.dataFields.categoryX = "t";
                lineSeries1.dataFields.valueY = "y2";
                lineSeries1.tooltipText = "y2: {valueY.value}";
                lineSeries1.fillOpacity = 0.5;
                lineSeries1.strokeWidth = 3;
                lineSeries1.propertyFields.stroke = "lineColor";
                lineSeries1.propertyFields.fill = "lineColor";

                chart.cursor = new am4charts.XYCursor();
                chart.cursor.behavior = "panX";
                chart.cursor.lineX.opacity = 0;
                chart.cursor.lineY.opacity = 0;

                chart.scrollbarX = new am4core.Scrollbar();
                chart.scrollbarX.parent = chart.bottomAxesContainer;

            }); // end am4core.ready()
        }

        buildGraph();

        $('#submitFunctionChange').on('click', function () {
            $.ajax({
                url: "/api/Calculations/ChangeUserFunction",
                data: {
                    textForm: $("#funcionInput").val(),
                },
                success: function (result) {
                    $('#mediumModal').modal('hide');
                    buildGraph();
                }
            });
        });

        $('#changeParams').on('click', function () {
            buildGraph();
        });

    </script>
}